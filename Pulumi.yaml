name: tool-tuesday-random-video
runtime: yaml
description: A python lambda via pulumi yaml
resources:
  iamForLambda:
    type: aws:iam:Role
    properties:
      assumeRolePolicy: |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Effect": "Allow",
              "Sid": ""
            }
          ]
        }
  toolTuesdayLambda:
    type: aws:lambda:Function
    properties:
      # If the file is not in the current working directory you will need to include a
      #   # path.module in the filename.
      code:
        fn::fileArchive: artifact.zip
      role: ${iamForLambda.arn}
      handler: tool_tuesday/handler.handler
      runtime: python3.9
      timeout: 30
      memorySize: 2048
      # environment:
      #   variables:
      #     foo: bar

  # site-bucket:
  #   type: aws-native:s3:Bucket
  #   properties:
  #     websiteConfiguration:
  #       indexDocument: index.html
  # index.html:
  #   type: aws:s3:BucketObject
  #   properties:
  #     bucket: ${site-bucket}
  #     source:
  #       Fn::FileAsset: ./www/index.html
  #     acl: public-read
  #     contentType: text/html
  # favicon.png:
  #   type: aws:s3:BucketObject
  #   properties:
  #     bucket: ${site-bucket}
  #     source:
  #       Fn::FileAsset: ./www/favicon.png
  #     acl: public-read
  #     contentType: image/png
  # bucketPolicy:
  #   type: aws:s3:BucketPolicy
  #   properties:
  #     bucket: ${site-bucket}
  #     policy: |
  #       {
  #         "Version": "2012-10-17",
  #         "Statement": [
  #           {
  #             "Effect": "Allow",
  #             "Principal": "*",
  #             "Action": ["s3:GetObject"],
  #             "Resource": ["${site-bucket.arn}/*"]
  #           }
  #         ]
  #       }
outputs:
  lambdaName: ${toolTuesdayLambda}
  # websiteUrl: ${site-bucket.websiteURL}
